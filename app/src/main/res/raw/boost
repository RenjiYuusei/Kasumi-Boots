#!/system/bin/sh
# Redirect all output immediately (no buffering)
exec 2>&1

# KasumiBoots - EXTREME Performance Boost for Cloud Phone
# Discord: https://discord.gg/kasumi
# Maximum performance - no battery concerns

log() { echo "[$(date +%H:%M:%S)] $@"; }
w() { f="$1"; shift; [ -f "$f" ] && echo "$@" > "$f" 2>/dev/null || true; }
ONLINE_CPUS=$(cat /sys/devices/system/cpu/online 2>/dev/null || echo "")

# Immediate feedback
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "  KASUMI BOOTS v1.0 - Cloud Optimizer"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""

log "🚀 Bắt đầu tối ưu hiệu suất..."
echo ""

# ============================================
# SECTION 1: CPU MAXIMUM PERFORMANCE
# ============================================
log "🔥 Section 1: CPU Optimization..."

# Bring all CPU cores online
log "Enabling all CPU cores..."
cnt=0
for d in /sys/devices/system/cpu/cpu[1-9]*; do
  [ -d "$d" ] || continue
  f="$d/online"
  if [ -f "$f" ]; then echo 1 > "$f" 2>/dev/null && cnt=$((cnt+1)); fi
done
log "✓ Enabled $cnt CPU cores"

# CPU performance governor & LOCK max freq (min = max)
log "Setting CPU to maximum performance..."
for d in /sys/devices/system/cpu/cpu[0-9]*; do
  [ -d "$d" ] || continue
  
  # Performance governor
  gov="$d/cpufreq/scaling_governor"
  if [ -f "$gov" ]; then 
    echo performance > "$gov" 2>/dev/null || true
  fi
  
  # Lock frequency to maximum (min = max = highest)
  maxf="$d/cpufreq/scaling_max_freq"
  info_max="$d/cpufreq/cpuinfo_max_freq"
  minf="$d/cpufreq/scaling_min_freq"
  
  if [ -f "$info_max" ]; then
    MAX_FREQ=$(cat "$info_max" 2>/dev/null)
    [ -f "$maxf" ] && echo "$MAX_FREQ" > "$maxf" 2>/dev/null || true
    [ -f "$minf" ] && echo "$MAX_FREQ" > "$minf" 2>/dev/null || true
  fi
  
  # Disable boost limits
  w "$d/cpufreq/boost" 1
  w "$d/cpufreq/schedutil/rate_limit_us" 0
done

# Apply to policy* (newer kernels)
for p in /sys/devices/system/cpu/cpufreq/policy*; do
  [ -d "$p" ] || continue
  w "$p/scaling_governor" performance
  
  if [ -f "$p/cpuinfo_max_freq" ]; then
    MAX_FREQ=$(cat "$p/cpuinfo_max_freq" 2>/dev/null)
    echo "$MAX_FREQ" > "$p/scaling_max_freq" 2>/dev/null || true
    echo "$MAX_FREQ" > "$p/scaling_min_freq" 2>/dev/null || true
  fi
  
  # Additional policy tuning
  w "$p/schedutil/rate_limit_us" 0
  w "$p/schedutil/hispeed_load" 1
  w "$p/schedutil/hispeed_freq" 9999999
done

log "✓ CPU locked at maximum frequency"

# ============================================
# SECTION 2: DISABLE THERMAL THROTTLING
# ============================================
log "🔥 Section 2: Thermal Control..."

# Disable thermal throttling (cloud phone doesn't overheat)
for t in /sys/class/thermal/thermal_zone*/mode; do
  [ -f "$t" ] && echo disabled > "$t" 2>/dev/null || true
done

# Set thermal limits to maximum
for t in /sys/class/thermal/thermal_zone*/trip_point_*_temp; do
  [ -f "$t" ] && echo 999999 > "$t" 2>/dev/null || true
done

# Disable thermal engine service
stop thermal-engine 2>/dev/null || true
stop thermald 2>/dev/null || true
stop mi_thermald 2>/dev/null || true

log "✓ Thermal throttling disabled"

# ============================================
# SECTION 3: GPU MAXIMUM PERFORMANCE
# ============================================
log "🔥 Section 3: GPU Optimization..."

# GPU performance governor (KGSL - Adreno)
if [ -d /sys/class/kgsl/kgsl-3d0/devfreq ]; then
  w /sys/class/kgsl/kgsl-3d0/devfreq/governor performance
  w /sys/class/kgsl/kgsl-3d0/devfreq/adrenoboost 3
  
  # Lock GPU to max freq
  if [ -f /sys/class/kgsl/kgsl-3d0/devfreq/max_freq ]; then
    MAX_GPU=$(cat /sys/class/kgsl/kgsl-3d0/devfreq/max_freq 2>/dev/null)
    echo "$MAX_GPU" > /sys/class/kgsl/kgsl-3d0/devfreq/min_freq 2>/dev/null || true
  fi
  
  # Disable GPU power saving
  w /sys/class/kgsl/kgsl-3d0/force_no_nap 1
  w /sys/class/kgsl/kgsl-3d0/force_bus_on 1
  w /sys/class/kgsl/kgsl-3d0/force_clk_on 1
  w /sys/class/kgsl/kgsl-3d0/force_rail_on 1
  w /sys/class/kgsl/kgsl-3d0/idle_timer 10000
fi

# Generic devfreq GPUs (Mali/others)
for d in /sys/class/devfreq/*; do
  [ -d "$d" ] || continue
  gov="$d/governor"
  name=$(basename "$d")
  
  echo "$name" | grep -iq "gpu" || continue
  
  w "$gov" performance
  
  # Lock to max frequency
  if [ -f "$d/max_freq" ]; then
    MAX_GPU=$(cat "$d/max_freq" 2>/dev/null)
    echo "$MAX_GPU" > "$d/min_freq" 2>/dev/null || true
  fi
  
  # Disable power saving
  w "$d/polling_interval" 10000
done

log "✓ GPU locked at maximum frequency"

# ============================================
# SECTION 4: CPU SET & SCHEDULING
# ============================================
log "🔥 Section 4: CPU Set & Scheduling..."

# Expand cpuset for app classes (all CPUs available)
if [ -n "$ONLINE_CPUS" ]; then
  for c in /dev/cpuset/top-app/cpus /dev/cpuset/foreground/cpus /dev/cpuset/system-background/cpus /dev/cpuset/background/cpus /dev/cpuset/restricted/cpus; do
    [ -f "$c" ] && echo "$ONLINE_CPUS" > "$c" 2>/dev/null || true
  done
fi

# Kernel scheduler tuning for performance
w /proc/sys/kernel/sched_latency_ns 1000000
w /proc/sys/kernel/sched_min_granularity_ns 100000
w /proc/sys/kernel/sched_wakeup_granularity_ns 500000
w /proc/sys/kernel/sched_migration_cost_ns 500000
w /proc/sys/kernel/sched_nr_migrate 128
w /proc/sys/kernel/sched_schedstats 0
w /proc/sys/kernel/sched_tunable_scaling 0

log "✓ CPU scheduling optimized"

# ============================================
# SECTION 5: I/O PERFORMANCE
# ============================================
log "🔥 Section 5: I/O Performance..."

# I/O scheduler: prefer performance schedulers
for b in /sys/block/*; do
  sched="$b/queue/scheduler"
  [ -f "$sched" ] || continue
  
  cur=$(cat "$sched" 2>/dev/null || echo "")
  
  # Try performance schedulers in order
  echo "$cur" | grep -q "kyber" && echo kyber > "$sched" 2>/dev/null && continue
  echo "$cur" | grep -q "mq-deadline" && echo mq-deadline > "$sched" 2>/dev/null && continue
  echo "$cur" | grep -q "deadline" && echo deadline > "$sched" 2>/dev/null && continue
  echo "$cur" | grep -q "noop" && echo noop > "$sched" 2>/dev/null || true
  
  # I/O queue tuning
  w "$b/queue/read_ahead_kb" 2048
  w "$b/queue/nr_requests" 512
  w "$b/queue/rq_affinity" 2
  w "$b/queue/add_random" 0
  w "$b/queue/iostats" 0
done

log "✓ I/O scheduler optimized"

# ============================================
# SECTION 6: MEMORY & VM TUNING
# ============================================
log "🔥 Section 6: Memory Optimization..."

# VM tunables for maximum performance
w /proc/sys/vm/swappiness 0
w /proc/sys/vm/dirty_ratio 30
w /proc/sys/vm/dirty_background_ratio 10
w /proc/sys/vm/vfs_cache_pressure 50
w /proc/sys/vm/stat_interval 10
w /proc/sys/vm/oom_kill_allocating_task 1
w /proc/sys/vm/oom_dump_tasks 0
w /proc/sys/vm/page-cluster 0
w /proc/sys/vm/block_dump 0

# Memory compaction
w /proc/sys/vm/compact_unevictable_allowed 0
w /proc/sys/vm/compaction_proactiveness 0

log "✓ Memory tuning applied"

# ============================================
# SECTION 7: POWER & BATTERY OPTIMIZATION OFF
# ============================================
log "🔥 Section 7: Disabling Power Saving..."

# Fixed performance mode
cmd power set-fixed-performance-mode-enabled true 2>/dev/null || true
cmd power set-mode 0 2>/dev/null || true

# Disable battery saver & optimizations
settings put global low_power 0 2>/dev/null || true
settings put global app_standby_enabled 0 2>/dev/null || true
settings put global app_auto_restriction_enabled false 2>/dev/null || true
settings put global forced_app_standby_enabled 0 2>/dev/null || true

# Disable doze
dumpsys deviceidle disable 2>/dev/null || true

# Screen always-on (optional, commented out)
# settings put system screen_off_timeout 2147483647 2>/dev/null || true

log "✓ Power saving features disabled"

# ============================================
# SECTION 8: NETWORK OPTIMIZATION
# ============================================
log "🔥 Section 8: Network Tuning..."

# TCP performance tuning
w /proc/sys/net/ipv4/tcp_low_latency 1
w /proc/sys/net/ipv4/tcp_timestamps 1
w /proc/sys/net/ipv4/tcp_sack 1
w /proc/sys/net/ipv4/tcp_fastopen 3
w /proc/sys/net/ipv4/tcp_congestion_control cubic

# Network buffer sizes
w /proc/sys/net/core/rmem_max 16777216
w /proc/sys/net/core/wmem_max 16777216
w /proc/sys/net/core/rmem_default 262144
w /proc/sys/net/core/wmem_default 262144
w /proc/sys/net/core/netdev_max_backlog 5000

log "✓ Network optimized"

# ============================================
# SECTION 9: CLEANUP & FINAL STEPS
# ============================================
log "🔥 Section 9: Cleanup..."

# Free caches
sync
echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true

# Kill background apps to free resources
cmd activity kill-all 2>/dev/null || am kill-all 2>/dev/null || true

# Disable unnecessary services
stop perfd 2>/dev/null || true
stop mpdecision 2>/dev/null || true

log "✓ Cleanup completed"

# ============================================
# COMPLETION SUMMARY
# ============================================
log ""
log "╔═══════════════════════════════════════════╗"
log "║              KASUMI BOOTS                 ║"
log "╚═══════════════════════════════════════════╝"
log "✓ CPU/GPU: Locked MAX freq | Thermal: OFF"
log "✓ I/O: Performance | RAM: No swap"
log "✓ Power Save: DISABLED | Network: Low latency"
log ""
log "Hệ thống đang chạy hiệu suất TỐI ĐA!"
log "Discord: https://discord.gg/kasumi"
log ""

